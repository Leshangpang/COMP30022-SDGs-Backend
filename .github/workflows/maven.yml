name: Maven CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean verify

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Package application
#        run: mvn clean package -DskipTests
#
#      - name: Deploy to server
#        env:
#          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
#          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
#          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
#        run: |
#          echo "$DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
#          scp -o StrictHostKeyChecking=no target/your-app.jar $DEPLOY_USER@$DEPLOY_HOST:/path/to/deploy/
#          ssh $DEPLOY_USER@$DEPLOY_HOST 'bash -s' <<'ENDSSH'

#          pkill -f 'java -jar /path/to/deploy/your-app.jar'

#          nohup java -jar /path/to/deploy/your-app.jar > /dev/null 2>&1 &
#          ENDSSH